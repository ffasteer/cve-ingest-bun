import { PoolExecutor } from "../utils/pool.ts";

export interface Feed<T> {
  isUpToDate(date: Date): Promise<boolean>;
  get(): Promise<T>;
}
export type RawCPE = {
  cpe23Uri: string;
  cpe_name: { cpe23Uri: string }[];

  versionStartExcluding?: string;
  versionStartIncluding?: string;
  versionEndExcluding?: string;
  versionEndIncluding?: string;
};

export type CPEFeedType = {
  matches: RawCPE[];
};

export class CPEFeed {
  url = "https://nvd.nist.gov/feeds/json/cpematch/1.0/nvdcpematch-1.0.json.gz";
  getUpdateDate(r: Response): Date {
    const h = r.headers.get("last-modified");
    if (h) {
      return new Date(h);
    }
    throw new Error("missing last modified field");
  }

  async isUpToDate(date: Date | undefined) {
    const resp = await fetch(this.url, {
      method: "HEAD",
    });
    const currentLastUpdate = this.getUpdateDate(resp);
    console.log(resp.status);
    if (!date) {
      return { requiresUpdate: true };
    }
    if (currentLastUpdate.getTime() > date.getTime()) {
      return { requiresUpdate: true };
    }
    return { requiresUpdate: false };
  }

  async get(pool: PoolExecutor) {
    const response = await fetch(this.url);
    const blob = await response.blob();
    console.log("file downloaded");
    const date = this.getUpdateDate(response);
    const stream = blob.stream();
    return {
      stream,
      date,
    };
  }
}
